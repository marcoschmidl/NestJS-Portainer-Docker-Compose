version: "3.7"
services:
  backend:
    build:
      dockerfile: Dockerfile
      context: Nest
    container_name: Nest
    volumes:
      - ./Nest:/workplace-backend/src/app
      - /workplace-backend/src/app/node_modules
    restart: on-failure
    links:
      - mongo
    networks:
      - scrumnet
    env_file:
      - .env

  frontend:
    build:
      dockerfile: Dockerfile
      context: Angular
    container_name: Angular
    volumes:
      - ./Angular:/workplace-frontend/src/app
      - /workplace-frontend/src/app/node_modules
    environment:
      - CHOKIDAR_USEPOLLING=true
    links:
      - backend
    restart: always
    networks:
      - scrumnet

  mongo:
    image: mongo:5.0.8
    container_name: mongo
    volumes:
      - mongodata:/data/db
    ports:
      - ${MONGO_PORT}:${MONGO_PORT}
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_ROOT_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD}
      MONGO_INITDB_DATABASE: ${MONGO_ROOT_USER}
      MONGO_HOST: ${MONGO_HOST}

    env_file:
      - .env
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongo localhost:27017/test --quiet
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped
    networks:
      - scrumnet

  mongo-express:
    image: mongo-express:0.54.0
    container_name: mongo-express
    ports:
      - ${MONGO_EXPRESS_PORT}:${MONGO_EXPRESS_PORT}
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: ${MONGO_ROOT_USER}
      ME_CONFIG_MONGODB_ADMINPASSWORD: ${MONGO_ROOT_PASSWORD}
      ME_CONFIG_MONGODB_SERVER: ${MONGO_SERVICE_NAME}
      ME_CONFIG_MONGODB_PORT: ${MONGO_PORT}
      ME_CONFIG_MONGODB_ENABLE_ADMIN: "true"
      ME_CONFIG_MONGODB_AUTH_DATABASE: ${MONGO_SERVICE_NAME}
      ME_CONFIG_MONGODB_AUTH_USERNAME: ${MONGO_ROOT_USER}
      ME_CONFIG_MONGODB_AUTH_PASSWORD: ${MONGO_ROOT_PASSWORD}
      ME_CONFIG_BASICAUTH_USERNAME: ${MONGO_ROOT_USER}
      ME_CONFIG_BASICAUTH_PASSWORD: ${MONGO_ROOT_PASSWORD}
    volumes:
      - mongodata:/data/db
    env_file:
      - .env
    healthcheck:
      test: wget --quiet --tries=3 --spider ${EXPRESS_CHECK} || exit 1
      interval: 30s
      timeout: 10s
      retries: 3
    restart: always
    links:
      - ${MONGO_SERVICE_NAME}
    depends_on:
      - ${MONGO_SERVICE_NAME}
    networks:
      - scrumnet

networks:
  scrumnet:
    driver: bridge

volumes:
  mongodata: